STARTING THE DEV ENVIRONMENT
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To start up the development servers, you need to build the dockers that hold
the servers, then start them up.  You can do that by running

	$ ./start.sh --dev

from the root of the project.  This will take a long time the first time,
because it downloads base images, and then builds server images.  The images
are cached, and will start up quickly next time.  If you ever want to
rebuild the images from scratch (e.g. if changes are made to files in
<proj-root>/docker), then do 

	$ ./start.sh --dev --force-recreate

Once the server dockers are started up, you can browse to https://localhost
to see the app.  



RESTARTING AND ACCESSING LOGS FOR THE NODE APP AND THE NGINX WEBSERVER
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can connect to the docker container that is running the webserver just like
you would connect to any docker container.  As a convenience, you can just run:

	$ bin/connect.sh

Once connected to that docker, you can stop the app (running in node) by doing:

	# pm2 kill

(Note, the # prompt is meant to represent the fact that this is a prompt
inside the node container, not your laptop's shell.) 

You can start the app again by doing: 

	# pm2 start config/ecosystem.config.json

You can view the app's output (e.g. anythin output to console.log and any error
messages in the node app) by running:

	# pm2 log

To connect to the webserver container and start watching the logs in a single
step, do this (when outside of the node container):

	$ bin/console.sh

That let's you see standard out from the node process, like anything printed to
the console using `console.log()` etc.
